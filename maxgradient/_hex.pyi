from _typeshed import Incomplete
from maxgradient._mode import Mode as Mode
from maxgradient._rich import Rich as Rich
from maxgradient.log import Console as Console, Log as Log
from rich.panel import Panel
from rich.text import Text
from typing import Tuple

console: Incomplete
log: Incomplete

class HexParseError(ValueError): ...

class Hex:
    REGEX: Incomplete
    def __init__(self, hex: str) -> None: ...
    @property
    def value(self) -> str: ...
    @property
    def mode(self) -> Mode: ...
    @property
    def as_rgb_tuple(self) -> Tuple[int, int, int]: ...
    @property
    def as_rgb(self) -> str: ...
    def __rich_repr__(self) -> Text: ...
    def __eq__(self, other: object) -> bool: ...
    def __rich__(self) -> Panel: ...
    def is_valid(self) -> bool: ...

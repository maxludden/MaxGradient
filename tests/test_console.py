# Generated by CodiumAI
import unittest

from maxgradient.console import ConsoleDimensions, ConsoleOptions


class TestConsoleOptions(unittest.TestCase):
    # create an instance of ConsoleOptions with valid arguments
    def test_create_instance_with_valid_arguments(self):
        size = ConsoleDimensions(width=80, height=24)
        options = ConsoleOptions(
            size=size,
            legacy_windows=False,
            min_width=0,
            max_width=80,
            is_terminal=True,
            encoding="utf-8",
            max_height=24,
        )
        self.assertEqual(options.size, size)
        self.assertFalse(options.legacy_windows)
        self.assertEqual(options.min_width, 0)
        self.assertEqual(options.max_width, 80)
        self.assertTrue(options.is_terminal)
        self.assertEqual(options.encoding, "utf-8")
        self.assertEqual(options.max_height, 24)
        self.assertIsNone(options.justify)
        self.assertIsNone(options.overflow)
        self.assertFalse(options.no_wrap)
        self.assertIsNone(options.highlight)
        self.assertIsNone(options.markup)
        self.assertIsNone(options.height)

    # update the width of an instance of ConsoleOptions
    def test_update_width(self):
        size = ConsoleDimensions(width=80, height=24)
        options = ConsoleOptions(
            size=size,
            legacy_windows=False,
            min_width=0,
            max_width=80,
            is_terminal=True,
            encoding="utf-8",
            max_height=24,
        )
        updated_options = options.update_width(100)
        self.assertEqual(updated_options.min_width, 100)
        self.assertEqual(updated_options.max_width, 100)

    # update the height of an instance of ConsoleOptions
    def test_update_height(self):
        size = ConsoleDimensions(width=80, height=24)
        options = ConsoleOptions(
            size=size,
            legacy_windows=False,
            min_width=0,
            max_width=80,
            is_terminal=True,
            encoding="utf-8",
            max_height=24,
        )
        updated_options = options.update_height(30)
        self.assertEqual(updated_options.max_height, 30)
        self.assertEqual(updated_options.height, 30)
